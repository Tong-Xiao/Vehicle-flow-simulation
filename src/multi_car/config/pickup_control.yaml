
# controls the rear two tires based on individual motors
  # Publish all joint states -----------------------------------
  joint_state_controller:
    type: joint_state_controller/JointStateController
    publish_rate: 50  

  # Velocity Controllers ---------------------------------------

  # The left/right rear wheels are what moves the car. This
  # controller set uses PID for velocity set points
  joint1_velocity_controller:
    type: velocity_controllers/JointVelocityController
    joint: back_left_wheel_joint
    pid: {p: 100.0, i: 0.01, d: 10.0}
  joint2_velocity_controller:
    type: velocity_controllers/JointVelocityController
    joint: back_right_wheel_joint
    pid: {p: 100.0, i: 0.01, d: 10.0}

  # we are no longer using these controllers for angular rate
  # but we may reinstate them later
  #front_left_steering_controller:
  #  type: velocity_controllers/JointVelocityController
  #  joint: front_left_steering_joint
  #  pid: {p: 100.0, i: 0.01, d: 10.0}
  #front_right_steering_controller:
  #  type: velocity_controllers/JointVelocityController
  #  joint: front_right_steering_joint
  #  pid: {p: 100.0, i: 0.01, d: 10.0}

  # permits a set point for the steering (tire) angle, which 
  # is enforced by these position controllers. The value is
  # set based on the dynamics of the controller, not an
  # instantaneous set for the position
  front_left_steering_position_controller:
    type: position_controllers/JointPositionController
    joint: front_left_steering_joint
    pid: {p: 10000.0, i: 0.01, d: 10.0}
  front_right_steering_position_controller:
    type: position_controllers/JointPositionController
    joint: front_right_steering_joint
    pid: {p: 10000.0, i: 0.01, d: 10.0}

  /gazebo_ros_control/pid_gains:
     back_left_wheel_joint: {p: 100000.0,i: 0.0, d: 0.0}
     back_right_wheel_joint: {p: 100000.0,i: 0.0, d: 0.0}
     front_left_steering_joint: {p: 1000000.0,i: 1.0, d: 0.0}
     front_right_steering_joint: {p: 1000000.0,i: 1.0, d: 0.0}
